name: Deploy Production

on:
  push:
    branches:
      - master

jobs:
  deploy:
    if: github.repository_owner == 'kittrgg'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production

      - name: Build and push api image
        uses: docker/build-push-action@v2
        with:
          context: ./api
          target: production
          push: true
          tags: ghcr.io/${{github.repository}}/api:${{github.sha}}

      - name: Build and push web image
        uses: docker/build-push-action@v2
        with:
          context: ./web
          push: true
          tags: ghcr.io/${{github.repository}}/web:${{github.sha}}
          build-args: |
            NEXT_PUBLIC_ENVIRONMENT=${{secrets.ENVIRONMENT}}
            DB_CONNECTION_STRING=${{secrets.DB_CONNECTION_STRING}}
            NEXT_PUBLIC_GOOGLE_ANALYTICS=${{secrets.NEXT_PUBLIC_GOOGLE_ANALYTICS}}
            NEXT_PUBLIC_API_KEY=${{secrets.NEXT_PUBLIC_API_KEY}}
            NEXT_PUBLIC_FIREBASE_DATABASE_URL=${{secrets.NEXT_PUBLIC_FIREBASE_DATABASE_URL}}
            FIREBASE_PROJECT_ID=${{secrets.FIREBASE_PROJECT_ID}}
            FIREBASE_AUTH_DOMAIN=${{secrets.FIREBASE_AUTH_DOMAIN}}
            FIREBASE_CLIENT_EMAIL=${{secrets.FIREBASE_CLIENT_EMAIL}}
            FIREBASE_MESSAGING_SENDER_ID=${{secrets.FIREBASE_MESSAGING_SENDER_ID}}
            FIREBASE_APP_ID=${{secrets.FIREBASE_APP_ID}}
            FIREBASE_MEASUREMENT_ID=${{secrets.FIREBASE_MEASUREMENT_ID}}
            FIREBASE_COOKIE_SECRET_PREVIOUS=${{secrets.FIREBASE_COOKIE_SECRET_PREVIOUS}}
            FIREBASE_COOKIE_SECRET_CURRENT=${{secrets.FIREBASE_COOKIE_SECRET_CURRENT}}
            TWITCH_CLIENT_ID=${{secrets.TWITCH_CLIENT_ID}}
            TWITCH_SECRET=${{secrets.TWITCH_SECRET}}
            NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=${{secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY}}
            STRIPE_SECRET_KEY=${{secrets.STRIPE_SECRET_KEY}}
            STRIPE_WEBHOOK_SECRET=${{secrets.STRIPE_WEBHOOK_SECRET}}
            SUBSCRIPTION_PRICE_ID=${{secrets.SUBSCRIPTION_PRICE_ID}}
            MONTHLY_TIP_PRICE_ID=${{secrets.MONTHLY_TIP_PRICE_ID}}
            NEXT_PUBLIC_SOCKET_HOST=${{secrets.NEXT_PUBLIC_SOCKET_HOST}}
            GOOGLE_APPLICATION_CREDENTIALS=${{secrets.GOOGLE_APPLICATION_CREDENTIALS}}
            NEXT_PUBLIC_SENTRY_DSN=${{secrets.SENTRY_DSN}}
            SENTRY_AUTH_TOKEN=${{secrets.SENTRY_AUTH_TOKEN}}

      - name: Trigger api deployment to Digital Ocean
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.DROPLET_HOST}}
          username: ${{secrets.DOKKU_SSH_USER}}
          key: ${{ secrets.DOKKU_SSH_PRIVATE_KEY }}
          script: |
            dokku git:from-image api ghcr.io/${{github.repository}}/api:${{github.sha}}

      - name: Trigger web deployment to Digital Ocean
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.DROPLET_HOST}}
          username: ${{secrets.DOKKU_SSH_USER}}
          key: "${{ secrets.DOKKU_SSH_PRIVATE_KEY }}"
          script: |
            dokku git:from-image web ghcr.io/${{github.repository}}/web:${{github.sha}}
